{"version":3,"sources":["utils/localDB.js","reducers/list.js","reducers/search.js","reducers/index.js","store/store.js","components/Search.js","containers/SearchContainer.js","actions/SearchActions.js","components/List.js","containers/ListContainer.js","actions/ListActions.js","components/AddItem.js","containers/AddItemContainer.js","App.js","serviceWorker.js","index.js"],"names":["localDB","arr","localStorage","phoneList","JSON","stringify","item","cbSuccess","cbError","items","parse","name","trim","phone","errors","find","arrItem","form","match","Object","keys","length","initialState","id","filteredItems","query","rootReducer","combineReducers","list","state","action","type","payload","status","splice","findIndex","parseInt","search","store","createStore","applyMiddleware","thunk","Search","onChange","e","props","setQuery","target","value","console","log","Navbar","bg","expand","Col","sm","Brand","href","Form","FormControl","placeholder","className","defaultValue","this","React","Component","SearchContainer","connect","dispatch","List","handleClick","removeItem","str","__html","Table","responsive","map","key","dangerouslySetInnerHTML","createMarkup","aria-label","onClick","aria-hidden","ListContainer","test","q","time","forEach","ind","toLowerCase","indexOf","tmpArr","split","push","join","replace","timeEnd","AddItem","submit","preventDefault","addItem","Date","now","Container","Row","md","span","offset","onSubmit","InputGroup","autoComplete","isInvalid","Append","Button","variant","Alert","AddItemContainer","err","App","document","title","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e04ae572.chunk.js","sourcesContent":["export const localDB = {\r\n  getItems : () => {\r\n    if(typeof localStorage.phoneList === 'undefined') {\r\n      localStorage.phoneList = JSON.stringify([\r\n        {id: 1, name: 'ivan', phone:'+7(912)123-45-67'},\r\n        {id: 2, name: 'petr', phone:'+7-912-333-333-33'},\r\n        {id: 3, name: 'roman', phone:'8912123456'},\r\n      ]);\r\n    }\r\n    return JSON.parse(localStorage.phoneList);\r\n  },\r\n\r\n  saveItems : (arr) => {\r\n    localStorage.phoneList = JSON.stringify( arr );\r\n  },\r\n\r\n  saveItem: (item, cbSuccess, cbError) => {\r\n    let items = JSON.parse(localStorage.phoneList);\r\n\r\n    item.name = item.name.trim();\r\n    item.phone = item.phone.trim();\r\n    let errors = {};\r\n\r\n    // проверка на дубли\r\n    let double = items.find((arrItem)=>{\r\n      return item.name===arrItem.name || item.phone===arrItem.phone;\r\n    });\r\n\r\n    if(double) {\r\n      errors.form = \"запись с таким именем или номером уже существует\";\r\n    }\r\n\r\n    //проверка на заполненность имени и телефона\r\n    if(!item.name) errors.name = \"не заполнено имя\";\r\n    if(!item.phone) errors.phone = \"не заполнен телефон\";\r\n\r\n    //проверка номера телефона\r\n    if(item.phone.match(/[^0-9-)(+]/i)) {\r\n      errors.phone = \"только цифры\";\r\n      errors.form = \"только цифры\";\r\n    }\r\n\r\n    if(Object.keys(errors).length>0) {\r\n      return cbError(errors);\r\n    }\r\n\r\n    localStorage.phoneList = JSON.stringify( [...items, ...[item]] );\r\n    return cbSuccess(item);\r\n  }\r\n}","import { localDB } from '../utils/localDB'\r\n\r\nconst initialState = {\r\n  items: localDB.getItems(),\r\n  filteredItems: [],\r\n  errors: {}\r\n}\r\n\r\nexport const list = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM_ERROR':\r\n      return {...state, errors:action.payload, status: 'error' };\r\n\r\n    case 'ADD_ITEM_SUCCESS':\r\n      return {...state, items: [...state.items, ...[action.payload]], errors:{}, status: 'success' };\r\n\r\n    case 'REMOVE_ITEM':\r\n      state.items.splice(state.items.findIndex((item)=>item.id===parseInt(action.payload)),1);\r\n      localDB.saveItems(state.items);\r\n      return {...state, items: state.items };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  query: ''\r\n}\r\n\r\nexport const search = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SEARCH':\r\n      return { ...state, query: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { list } from './list'\r\nimport { search } from './search'\r\nimport { combineReducers } from 'redux'\r\n\r\nexport const rootReducer=combineReducers({\r\n  list: list,\r\n  search: search\r\n})","import { applyMiddleware, createStore } from 'redux'\r\nimport { rootReducer } from '../reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from 'react'\r\nimport { Col, Form, FormControl, Navbar } from 'react-bootstrap'\r\n//import PropTypes from 'prop-types'\r\n\r\nexport class Search extends React.Component {\r\n  onChange = (e) => {\r\n    this.props.setQuery(e.target.value.trim());\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Search render\");\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Col sm=\"auto\">\r\n          <Navbar.Brand href=\"/\">Телефонный справочник</Navbar.Brand>\r\n        </Col>\r\n        <Col>\r\n          <Form>\r\n            <FormControl type=\"text\" name=\"query\"  placeholder=\"Поиск по имени или номеру\" className=\"\"  defaultValue={this.props.query} onChange={this.onChange}  />\r\n          </Form>\r\n        </Col>\r\n      </Navbar>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nSearch.propTypes = {}","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Search } from '../components/Search'\nimport { setQuery } from '../actions/SearchActions'\n\n\nclass SearchContainer extends React.Component {\n  render () {\n    console.log(\"SearchContainer render\", this.props);\n    const {search,setQuery} = this.props;\n    return (\n      <div className=\"phone-search-container\">\n        <Search query={search.query} setQuery={setQuery} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    search: store.search\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setQuery: (query) => dispatch(setQuery(query))\n  }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchContainer);\n","export const setQuery = (query) => ({\r\n  type: 'SEARCH',\r\n  payload: query,\r\n});","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nexport class List extends React.Component {\r\n  handleClick = (id) => {\r\n    this.props.removeItem(id);\r\n  }\r\n\r\n  createMarkup(str) {\r\n    return {__html: str};\r\n  }\r\n\r\n  render() {\r\n    console.log(\"list render\" ,this.props);\r\n    return (\r\n      <Table responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Имя</th>\r\n            <th>Телефон</th>\r\n            <th>#</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            this.props.filteredItems.map((item)=>\r\n              <tr key={item.id}>\r\n                <td dangerouslySetInnerHTML={this.createMarkup(item.name)} className=\"name\" />\r\n                <td dangerouslySetInnerHTML={this.createMarkup(item.phone)} className=\"phone\" />\r\n                <td>\r\n                  <button type=\"button\" className=\"close float-none\" aria-label=\"Close\" onClick={()=>this.handleClick(item.id)}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          }\r\n        </tbody>\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nList.propTypes = {\r\n  filteredItems: PropTypes.array.isRequired,\r\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport { List } from '../components/List'\nimport { removeItem } from '../actions/ListActions'\n\n\nclass ListContainer extends React.Component {\n  render () {\n    console.log(\"ListContainer render\", this.props);\n    const {list, removeItem} = this.props;\n    return (\n      <div className=\"phone-list-container\">\n        <List\n          filteredItems={list.filteredItems}\n          removeItem={removeItem}\n          test={list.test}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  console.log(\"mapStateToProps\", store);\n  let filteredItems = false;\n  let q = store.search.query.trim();\n  if(q) {\n    console.time(\"filtered\");\n    filteredItems = [];\n    store.list.items.forEach((item)=>{\n      let ind = item.name.toLowerCase().indexOf(q.toLowerCase());\n      if(ind > -1) {\n        let tmpArr = item.name.split('');\n        tmpArr.splice(ind,0,'<b>');\n        tmpArr.splice(ind+q.length+1,0,'</b>');\n        filteredItems.push({...item, name:tmpArr.join('')});\n      }\n\n      ind = item.phone.toLowerCase().replace(/[^0-9]/gim,'').indexOf(q.toLowerCase());\n      if( ind >-1 ) {\n        //let tmpArr = item.phone.split('');\n        //tmpArr.splice(ind,0,'<b>');\n        //tmpArr.splice(ind+store.search.query.length+1,0,'</b>');\n        //filteredItems.push({...item, phone:tmpArr.join('')});\n        filteredItems.push(item);\n      }\n    });\n    console.timeEnd(\"filtered\");\n  }\n  store.list.filteredItems = filteredItems || store.list.items;\n\n  return {\n    list: store.list,\n    search: store.search\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeItem: (id) => dispatch(removeItem(id))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContainer);\n","import { localDB } from '../utils/localDB'\r\n\r\nexport const addItem = (item) => {\r\n\r\n  return (dispatch) => {\r\n    //создаем новую запись\r\n    localDB.saveItem(item,\r\n      function (item) {\r\n        dispatch({\r\n          type: 'ADD_ITEM_SUCCESS',\r\n          payload: item\r\n        })\r\n      },\r\n      function (err) {\r\n        dispatch({\r\n          type: 'ADD_ITEM_ERROR',\r\n          payload: err\r\n        });\r\n      });\r\n  }\r\n};\r\n\r\nexport const removeItem = (id) => ({\r\n  type: 'REMOVE_ITEM',\r\n  payload: id,\r\n})","import React from 'react'\r\nimport { Alert, Button, Col, Container, FormControl, InputGroup, Row } from 'react-bootstrap'\r\n\r\nexport class AddItem extends React.Component {\r\n  submit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.addItem({\r\n      id: Date.now(),\r\n      name: e.target.name.value,\r\n      phone: e.target.phone.value\r\n    });\r\n\r\n    e.target.name.value = '';\r\n    e.target.phone.value = '';\r\n  }\r\n\r\n  render() {\r\n    console.log(\"AddItem render\");\r\n    const {errors} = this.props;\r\n\r\n    return (\r\n      <Container className=\"mt-4 mb-4\">\r\n        <Row>\r\n          <Col md={{ span: 8, offset: 2 }}>\r\n            <form action=\"\" onSubmit={this.submit}>\r\n              <InputGroup>\r\n                <FormControl name=\"name\" autoComplete=\"off\" placeholder=\"Имя\" isInvalid={(errors.name ? \"true\" : \"\")}  />\r\n                <FormControl name=\"phone\" autoComplete=\"off\" placeholder=\"Телефон\" isInvalid={(errors.phone ? \"true\" : \"\")} />\r\n\r\n                <InputGroup.Append>\r\n                  <Button variant=\"outline-success\" type=\"submit\">Добавить</Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </form>\r\n            {(errors.form) ? <Alert variant=\"danger\" className=\"mt-2\">{errors.form}</Alert> : ''}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { AddItem } from '../components/AddItem'\nimport { addItem } from '../actions/ListActions'\n\n\nclass AddItemContainer extends React.Component {\n  render () {\n    console.log(\"AddItemContainer render\", this.props);\n    const {addItem, errors} = this.props;\n    return (\n      <div className=\"phone-actions-container\">\n        <AddItem addItem={addItem} errors={errors} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    errors: store.list.errors\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addItem: (item) => dispatch(addItem(item))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddItemContainer);\n","import React from 'react';\r\nimport SearchContainer from './containers/SearchContainer'\r\nimport ListContainer from './containers/ListContainer'\r\nimport AddItemContainer from './containers/AddItemContainer'\r\n\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    document.title = \"Телефонный справочник\"\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n        <SearchContainer />\r\n        <AddItemContainer />\r\n        <ListContainer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store'\nimport App from './App'\nimport './index.scss';\n\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Provider store={store}>\n\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}